@extern putchar fun: character u64 -> u32

printNum fun: number u64
    biggest u64 <- 10
    rep biggest <= number: biggest <- biggest * 10
    biggest <- biggest / 10

    rep biggest > 0, biggest <- biggest / 10
        digit u64 <- number / biggest
        putchar(digit + '0')
        number <- number % biggest
    ;
;

main blah:
  abc sint32 <- 42 * 2 ;

printCharRaw raw<"m, m">: character u32, attribute u32
    mov ah, 0x00
    mov bl, $0
    mov al, $1
    int 0x30
;

engine blob
    sizes data<u64, 2>
;

car blob
    name data<u64, 16>
    eng data<blob<engine>, 2>
;

@export main fun -> u64
    toyota blob<car>

    //toyota.name <- "toyo"
    toyota.eng[0] <- { {1200, 1500} }
    toyota.eng[1] <- { {14, 18}}
    //toyota.eng.sizes[0] <- 13
    //toyota.eng.size <- 1200

    //s u64 <- toyota.eng.size
    //toyota.eng.size
    //toyota.eng.size <- 3400
    nPtr ptr<u64> <- { toyota.eng[1].sizes[0].adr }
    //printNum(n.vAdr)
    nPtr.val <- 5

    n2Ptr ptr<u64> <- { nPtr.vAdr }
    n2Ptr.val <- 7
    //nPtr.vAdr <- { 8 }

    printNum(toyota.eng[1].sizes[0])
    /*rep i u64 <- 0, i < toyota.eng.count, i <- i + 1
        rep j u64 <- 0, j < toyota.eng[i].sizes.count, j <- j + 1
            toyota.eng[i].sizes[j] <- toyota.eng[i].sizes[j] * 2
            printNum(toyota.eng[i].sizes[j])
            putchar('\n')
        ;
    ;*/

    //n u64 <- 15

    //nPtr ptr<u64> <- { n.adr }
    //nPtr.val <- 7
    //printNum(n)
    //printNum(nPtr.val)

    ret 0
;