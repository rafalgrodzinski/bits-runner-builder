@import io

@extern malloc fun: size u64 -> u64

user blob
    name data<u64, 16>
    id u64
    next ptr<blob<user>>
;

newUser fun: userPtr ptr<blob<user>>, name data<u64, 16>, id u64
    rep userPtr.vAdr != 0x00
        user blob<user> <- userPtr.val
        userPtr <- user.next
    ;

    userPtr <- { malloc(130) }
    userPtr.val <- { name, id, { 0x00 } }
;

printUsers fun: userPtr ptr<blob<user>>
    rep userPtr.vAdr != 0x00
        user blob<user> <- userPtr.val
        userPtr <- user.next

        @io.print("id: ")
        @io.printNum(user.id)
        @io.print("\n")
        @io.print("name: ")
        @io.print(user.name)
        @io.print("\n")
    ;
;

printU fun: user blob<user>
    //user blob<user> <- userPtr.val

    @io.print("id: ")
    @io.printNum(user.id)
    @io.print("\n")
    @io.print("name: ")
    @io.print(user.name)
    @io.print("\n")
;

@export main fun -> u32
    /*userPtr ptr<blob<user>> <- { 0x00 }
    newUser(userPtr, "Bob", 14)
    newUser(userPtr, "John", 7)
    newUser(userPtr, "Alice", 9)
    newUser(userPtr, "Mike", 3)

    printUsers(userPtr)*/

    userPtr ptr<blob<user>> <- { malloc(130) }
    //user blob<user> <- userPtr.val
    //user.id <- 14
    //user.name <- "Kuma"
    userPtr.val.id <- 7
    printU(userPtr.val)

    ret 0
;